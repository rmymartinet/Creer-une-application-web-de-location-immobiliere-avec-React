{"ast":null,"code":"var _jsxFileName = \"/Users/bonjour/Documents/Projet_n\\xB06_KASA_React/my-app/src/components/Banner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SeaBanner from \"../images/sea-banner.webp\";\nimport Mountains from \"../images/mountains-banner.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner({\n  imagemountain\n}) {\n  _s();\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 400);\n  useEffect(() => {\n    // Fonction pour mettre à jour isMobile lorsque la fenêtre est redimensionnée\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 400);\n    };\n\n    // Ajoute un écouteur d'événement de redimensionnement de la fenêtre\n    window.addEventListener(handleResize);\n\n    // Nettoie l'écouteur d'événement lors de la suppression du composant\n    return () => {\n      window.removeEventListener(handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"banner\",\n    children: imagemountain ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Mountains,\n      alt: \"paysage de montagnes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner banner-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        rel: \"preload\",\n        src: SeaBanner,\n        alt: \"paysage de cote, montagne et mer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Chez vous,\", isMobile ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) : \" \", \" \", \"partout et ailleurs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Banner, \"c1v1/+7GW0P918FZRiqnFLND9+Y=\");\n_c = Banner;\nBanner.propTypes = {\n  imagemountain: PropTypes.bool\n};\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","SeaBanner","Mountains","jsxDEV","_jsxDEV","Banner","imagemountain","_s","isMobile","setIsMobile","window","innerWidth","handleResize","addEventListener","removeEventListener","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","rel","_c","propTypes","bool","$RefreshReg$"],"sources":["/Users/bonjour/Documents/Projet_n°6_KASA_React/my-app/src/components/Banner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SeaBanner from \"../images/sea-banner.webp\";\nimport Mountains from \"../images/mountains-banner.webp\";\n\nfunction Banner({ imagemountain }) {\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 400);\n\n  useEffect(() => {\n    // Fonction pour mettre à jour isMobile lorsque la fenêtre est redimensionnée\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 400);\n    };\n\n    // Ajoute un écouteur d'événement de redimensionnement de la fenêtre\n    window.addEventListener(handleResize);\n\n    // Nettoie l'écouteur d'événement lors de la suppression du composant\n    return () => {\n      window.removeEventListener(handleResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"banner\">\n      {imagemountain ? (\n        <img src={Mountains} alt=\"paysage de montagnes\" />\n      ) : (\n        <div className=\"banner banner-content\">\n          <img\n            rel=\"preload\"\n            src={SeaBanner}\n            alt=\"paysage de cote, montagne et mer\"\n          />\n          <p>\n            Chez vous,\n            {isMobile ? <br /> : \" \"}{\" \"}\n            {/* Espace supplémentaire pour la lisibilité */}\n            partout et ailleurs\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nBanner.propTypes = {\n  imagemountain: PropTypes.bool,\n};\n\nexport default Banner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,SAAS,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,MAAMA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;EAEjEb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzBH,WAAW,CAACC,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC;IACtC,CAAC;;IAED;IACAD,MAAM,CAACG,gBAAgB,CAACD,YAAY,CAAC;;IAErC;IACA,OAAO,MAAM;MACXF,MAAM,CAACI,mBAAmB,CAACF,YAAY,CAAC;IAC1C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,EACpBV,aAAa,gBACZF,OAAA;MAAKa,GAAG,EAAEf,SAAU;MAACgB,GAAG,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElDlB,OAAA;MAAKW,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCZ,OAAA;QACEmB,GAAG,EAAC,SAAS;QACbN,GAAG,EAAEhB,SAAU;QACfiB,GAAG,EAAC;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFlB,OAAA;QAAAY,QAAA,GAAG,YAED,EAACR,QAAQ,gBAAGJ,OAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GAAG,GAAG,EAAE,GAAG,EACmB,qBAElD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAvCQF,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAyCfA,MAAM,CAACoB,SAAS,GAAG;EACjBnB,aAAa,EAAEN,SAAS,CAAC0B;AAC3B,CAAC;AAED,eAAerB,MAAM;AAAC,IAAAmB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}